--- # -------------------------

# -------------------------
#         ALIASES
aliases:
  # -------------------------
  #          CACHE
  # -------------------------
  - &restore-yarn-cache
    keys:
      - v6-yarn-cache-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

  - &save-yarn-cache
    paths:
      - ~/.cache/yarn
      - ~/Library/Detox
    key: v6-yarn-cache-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

  - &save-pods-cache
    paths:
      - ~/react-native-firebase/tests/ios/Pods
    key: v6-pods-cache-{{ arch }}-{{ checksum "ios/RNFirebase.podspec" }}-{{ checksum "tests/ios/Podfile" }}-{{ checksum "tests/ios/Podfile.lock" }}

  - &restore-pods-cache
    keys:
      - v6-pods-cache-{{ arch }}-{{ checksum "ios/RNFirebase.podspec" }}-{{ checksum "tests/ios/Podfile" }}-{{ checksum "tests/ios/Podfile.lock" }}

  - &save-ios-build-cache
    paths:
      - ~/react-native-firebase/tests/ios/build/Build
    key: v6-ios-build-cache-{{ arch }}-{{ checksum "ios/RNFirebase.podspec" }}-{{ checksum "tests/ios/Podfile" }}-{{ checksum "tests/ios/Podfile.lock" }}

  - &restore-ios-build-cache
    keys:
      - v6-ios-build-cache-{{ arch }}-{{ checksum "ios/RNFirebase.podspec" }}-{{ checksum "tests/ios/Podfile" }}-{{ checksum "tests/ios/Podfile.lock" }}

  - &save-brew-cache
    paths:
      - /usr/local/Homebrew
      - ~/Library/Caches/Homebrew
    key: v6-brew-cache-{{ arch }}

  - &restore-brew-cache
    keys:
      - v6-brew-cache-{{ arch }}

  - &configure-jet-detox-environment
    name: Configure Jet + Detox Environment
    command: |
      HOMEBREW_NO_AUTO_UPDATE=1 brew install node@8 >/dev/null
      HOMEBREW_NO_AUTO_UPDATE=1 brew tap wix/brew >/dev/null
      HOMEBREW_NO_AUTO_UPDATE=1 brew install applesimutils >/dev/null
      HOMEBREW_NO_AUTO_UPDATE=1 brew install watchman >/dev/null
      touch .watchmanconfig
      node -v

  - &packager-jet
    name: Start React Native Pacakager (background)
    background: true
    command: yarn run tests:packager:jet || true

  - &packager-warmup
    name: Warming up Packager
    background: true
    command: node .circleci/scripts/packager-warmup.js

  # -------------------------
  #       INSTALLATION
  # -------------------------
  - &yarn
    name: Yarn Install
    command: |
      yarn install --non-interactive --cache-folder ~/.cache/yarn

  - &yarn-no-scripts
    name: Yarn Install
    command: |
      yarn install --non-interactive --ignore-scripts --cache-folder ~/.cache/yarn
      yarn run prepare

  # -------------------------
  #         ANALYSE
  # -------------------------

  # eslint
  - &eslint
    name: Lint JS Code (ESLint)
    command: yarn run validate:all:js

  # typescript
  - &validate-ts-declarations
    name: Validate TypeScript Declarations
    command: yarn run validate:all:ts

  # flow
  - &validate-flow-declarations
    name: Validate Flow Declarations
    command: yarn run validate:all:flow

  # -------------------------
  #        ANDROID
  # -------------------------

  - &android-accept-licenses
    name: Accept Android Licenses
    shell: /bin/bash -e
    command: |
      yes | sdkmanager --licenses
      yes | sdkmanager --update

# -------------------------
#        DEFAULTS
# -------------------------

defaults: &defaults
  working_directory: ~/react-native-firebase
  environment:
    - GIT_COMMIT_DESC: git log --format=oneline -n 1 $CIRCLE_SHA1

# JAVASCRIPT
js_defaults: &js_defaults
  <<: *defaults
  docker:
    - image: circleci/node:8
  environment:
    - PATH: '/opt/yarn/yarn-v1.5.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# ANDROID
android_defaults: &android_defaults
  <<: *defaults
  docker:
    - image: invertase/react-native-firebase-android:standard
  resource_class: 'xlarge'
  working_directory: ~/react-native-firebase
  environment:
    - _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx2048m'
    - GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError -Xmx2048m"'

# IOS
macos_defaults: &macos_defaults
  <<: *defaults
  resource_class: 'medium'
  macos:
    xcode: '10.0.0'

# -------------------------
#          JOBS
# -------------------------
version: 2
jobs:
  # Set up a Node environment for downstream jobs
  checkout-code:
    <<: *js_defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .

  analyse:
    <<: *js_defaults
    steps:
      - attach_workspace:
          at: ~/react-native-firebase
      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache
      - run: *eslint
      - run: *validate-flow-declarations
      - run: *validate-ts-declarations

  # -------------------------
  #     ANDROID - BUILD
  # -------------------------

  android-build-debug:
    <<: *android_defaults
    steps:
      - attach_workspace:
          at: ~/react-native-firebase

      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache

      # restore saved caches
      - restore_cache:
          keys:
            - v6-gradle-wrapper-{{ checksum "tests/android/gradle/wrapper/gradle-wrapper.properties" }}

      - restore_cache:
          keys:
            # for multi-project builds where dependencies are not defined in one central file,
            # an additional run step before is necessary that concatenates affected files
            # into one file that can be checksummed
            - v6-gradle-cache-{{ checksum "tests/android/build.gradle" }}
            - v6-gradle-cache

      - restore_cache:
          keys:
            - v6-gradle-build-caches-{{ .Revision }}
            - v6-gradle-build-caches

      - run:
          name: Restoring Gradle Build Caches
          command: |
            [ -d ~/gradle-build-caches ] &&
              [ -n "$(ls -A ~/gradle-build-caches)" ] &&
              rm -rf ~/.gradle/caches/build-cache-* &&
              mkdir -p ~/.gradle/caches/ &&
              mv ~/gradle-build-caches/* ~/.gradle/caches/ || true

      - run: *android-accept-licenses

      # download and cache dependencies and Gradle
      - run:
          name: Downloading Dependencies
          command: cd tests/android && ./gradlew --max-workers 6 downloadDependencies

      - save_cache:
          paths:
            - ~/.gradle/wrapper/
          key: v6-gradle-wrapper-{{ checksum "tests/android/gradle/wrapper/gradle-wrapper.properties" }}

      - save_cache:
          paths:
            - ~/.gradle/caches/
          key: v6-gradle-cache-{{ checksum "tests/android/build.gradle" }}

      - run:
          name: Build Android Testing App
          command: cd tests/android && chmod +x gradlew && ./gradlew --build-cache --max-workers 6 --continue assembleDebug assembleAndroidTest -DtestBuildType=debug --stacktrace

      # cache gradle build caches
      - run:
          name: Collecting Gradle Build Caches
          command: |
            mkdir -p ~/gradle-build-caches
            [ -d ~/.gradle/caches ] &&
              [ -n "$(ls -Ad ~/.gradle/caches/build-cache-* 2>/dev/null)" ] &&
              rm -rf ~/gradle-build-caches/* &&
              mv ~/.gradle/caches/build-cache-* ~/gradle-build-caches || true
          when: always

      - save_cache:
          paths:
            - ~/gradle-build-caches
          key: v6-gradle-build-caches-{{ .Revision }}
          when: always

      - persist_to_workspace:
          root: ~/react-native-firebase
          paths:
            - tests/android/app/build/outputs/apk

  android-build-release:
    <<: *android_defaults
    steps:
      - attach_workspace:
          at: ~/react-native-firebase

      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache

      # restore saved caches
      - restore_cache:
          keys:
            - v6-gradle-release-wrapper-{{ checksum "tests/android/gradle/wrapper/gradle-wrapper.properties" }}

      - restore_cache:
          keys:
            # for multi-project builds where dependencies are not defined in one central file,
            # an additional run step before is necessary that concatenates affected files
            # into one file that can be checksummed
            - v6-gradle-release-cache-{{ checksum "tests/android/build.gradle" }}
            - v6-gradle-release-cache

      - restore_cache:
          keys:
            - v6-gradle-release-build-caches-{{ .Revision }}
            - v6-gradle-release-build-caches

      - run:
          name: Restoring Gradle Build Caches
          command: |
            [ -d ~/gradle-build-caches ] &&
              [ -n "$(ls -A ~/gradle-build-caches)" ] &&
              rm -rf ~/.gradle/caches/build-cache-* &&
              mkdir -p ~/.gradle/caches/ &&
              mv ~/gradle-build-caches/* ~/.gradle/caches/ || true

      - run: *android-accept-licenses

      # download and cache dependencies and Gradle
      - run:
          name: Downloading Dependencies
          command: cd tests/android && ./gradlew --max-workers 6 downloadDependencies

      - save_cache:
          paths:
            - ~/.gradle/wrapper/
          key: v6-gradle-release-wrapper-{{ checksum "tests/android/gradle/wrapper/gradle-wrapper.properties" }}

      - save_cache:
          paths:
            - ~/.gradle/caches/
          key: v6-gradle-release-cache-{{ checksum "tests/android/build.gradle" }}

      - run:
          name: Build Android Testing App
          command: cd tests/android && chmod +x gradlew && ./gradlew --build-cache --max-workers 2 --continue assembleRelease

      # cache gradle build caches
      - run:
          name: Collecting Gradle Build Caches
          command: |
            mkdir -p ~/gradle-build-caches
            [ -d ~/.gradle/caches ] &&
              [ -n "$(ls -Ad ~/.gradle/caches/build-cache-* 2>/dev/null)" ] &&
              rm -rf ~/gradle-build-caches/* &&
              mv ~/.gradle/caches/build-cache-* ~/gradle-build-caches || true
          when: always

      - save_cache:
          paths:
            - ~/gradle-build-caches
          key: v6-gradle-release-build-caches-{{ .Revision }}
          when: always

      - persist_to_workspace:
          root: ~/react-native-firebase
          paths:
            - tests/android/app/build/outputs/apk

  # -------------------------
  #    ANDROID - TEST E2E
  # -------------------------

  android-test-e2e:
    <<: *macos_defaults
    steps:
      - attach_workspace:
          at: ~/react-native-firebase
      - run:
          name: Configure Environment Variables
          command: |
            echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:~/.yarn/bin:~/react-native-firebase/node_modules/.bin:~/react-native-firebase/tests/node_modules/.bin"' >> $BASH_ENV
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export PATH="$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH"' >> $BASH_ENV
            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
            echo 'export JAVA_HOME=/Library/Java/Home' >> $BASH_ENV
            source $BASH_ENV

      - run:
          name: Install Android SDKs
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install intel-haxm
            HOMEBREW_NO_AUTO_UPDATE=1 brew install node@8 >/dev/null
            ls -la /usr/local/share/android-sdk
            echo $PATH

      # Yarn install - to ensure detox post install builds
      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache

      # must always be after environment config job but before ios build
      - run: *packager-jet
      - run: *packager-warmup

#      - restore-cache:
#          keys:
#            - v7-android28-sdk-cache-{{ arch }}
      - run:
          name: Install Android Emulators
          shell: /bin/bash -e
          command: |
            yes | sdkmanager "platform-tools"  "tools"
            yes | sdkmanager "platforms;android-28" "system-images;android-28;google_apis;x86"
            yes | sdkmanager "emulator" --channel=3
            yes | sdkmanager --licenses
            yes | sdkmanager --update
            yes | sdkmanager --list
      - run:
          name: ADB Start Stop
          command: |
            adb start-server
            adb devices
            adb kill-server
            ls -la ~/.android
#      - save-cache:
#          paths:
#            - /usr/local/share/android-sdk
#            - ~/.android/
#          key: v7-android28-sdk-cache-{{ arch }}
#          when: always
#            yes | sdkmanager "platforms;android-26" "system-images;android-26;google_apis_playstore;x86_64" --verbose

      - run:
          name: Create Android Emulator (API 28)
          command: avdmanager create avd -n TestingAVD -k "system-images;android-28;google_apis;x86" -g google_apis -d "Nexus 5"
      - run:
          name: Run Android Emulator (API 28) in background
          command: |
            /usr/local/share/android-sdk/emulator/emulator @TestingAVD -version
            /usr/local/share/android-sdk/emulator/emulator @TestingAVD -skin 1080x2066 -cores 2 -force-32bit -gpu on -accel on -memory 2048 -no-audio -no-snapshot -no-window
          background: true
      - run:
          name: Wait for AVD to be ready
          no_output_timeout: "5m"
          command: sh ./.circleci/scripts/wait-for-avd.sh

      # Now Test \o/
      - run:
          name: Run Jet Tests (API 28)
          command: yarn run tests:android:test-cover

      - run:
          name: Submit Coverage
          command: yarn run codecov

      - store_artifacts:
          path: ~/detox-artifacts
      - store_artifacts:
          path: ~/react-native-firebase/coverage

  # -------------------------
  #      iOS - TEST E2E
  # -------------------------

  ios-test-e2e:
    <<: *macos_defaults
    steps:
      - attach_workspace:
          at: ~/react-native-firebase
      - run:
          name: Start iPhone X simulator (background)
          background: true
          command: xcrun simctl boot "iPhone X" || true
      - run:
          name: Configure Environment Variables
          command: |
            echo 'export PATH=/usr/local/opt/node@8/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      # Brew
      - restore-cache: *restore-brew-cache
      - run: *configure-jet-detox-environment
      - save-cache: *save-brew-cache

      # Yarn install - to ensure detox post install builds
      - restore-cache: *restore-yarn-cache
      - run: *yarn
      - save-cache: *save-yarn-cache

      # Pods
      - restore-cache: *restore-pods-cache
      - run:
          name: Install CocoaPods +  Pod Install
          command: |
            cd tests/ios
            curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
            pod install
      - save-cache: *save-pods-cache

      # must always be after environment config job but before ios build
      - run: *packager-jet
      - run: *packager-warmup

      # XCode Build
      - restore-cache: *restore-ios-build-cache
      - run:
          name: Build iOS Testing App
          command: yarn run tests:ios:build
      - save-cache: *save-ios-build-cache

      - run: mkdir ~/detox-artifacts

      # Now Test \o/
      - run:
          name: Run Jet Tests
          command: yarn run tests:ios:test-cover

      - run:
          name: Submit Coverage
          command: yarn run codecov

      - store_artifacts:
          path: ~/detox-artifacts
      - store_artifacts:
          path: ~/react-native-firebase/coverage

# -------------------------
#        WORK FLOWS
# -------------------------
workflows:
  version: 2
  #  JS:
  #    jobs:
  #      - checkout-code
  #
  #      - analyse:
  #          requires:
  #            - checkout-code
  Android:
    jobs:
      - checkout-code

      - android-build-debug:
          requires:
            - checkout-code

#      - android-build-release:
#          requires:
#            - checkout-code

      - android-test-e2e:
          requires:
#            - checkout-code
            - android-build-debug

#  iOS:
#    jobs:
#      - checkout-code
#      - ios-test-e2e:
#          requires:
#            - checkout-code
